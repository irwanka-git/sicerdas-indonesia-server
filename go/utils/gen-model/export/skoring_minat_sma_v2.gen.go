// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package export

import (
	"context"

	"gorm.io/gorm"
	"gorm.io/gorm/clause"
	"gorm.io/gorm/schema"

	"gorm.io/gen"
	"gorm.io/gen/field"

	"gorm.io/plugin/dbresolver"

	"irwanka/sicerdas/utils/gen-model/entity"
)

func newSkoringMinatSmaV2(db *gorm.DB, opts ...gen.DOOption) skoringMinatSmaV2 {
	_skoringMinatSmaV2 := skoringMinatSmaV2{}

	_skoringMinatSmaV2.skoringMinatSmaV2Do.UseDB(db, opts...)
	_skoringMinatSmaV2.skoringMinatSmaV2Do.UseModel(&entity.SkoringMinatSmaV2{})

	tableName := _skoringMinatSmaV2.skoringMinatSmaV2Do.TableName()
	_skoringMinatSmaV2.ALL = field.NewAsterisk(tableName)
	_skoringMinatSmaV2.ID = field.NewInt32(tableName, "id")
	_skoringMinatSmaV2.IDUser = field.NewInt32(tableName, "id_user")
	_skoringMinatSmaV2.IDQuiz = field.NewInt32(tableName, "id_quiz")
	_skoringMinatSmaV2.TpaIu = field.NewInt32(tableName, "tpa_iu")
	_skoringMinatSmaV2.TpaPv = field.NewInt32(tableName, "tpa_pv")
	_skoringMinatSmaV2.TpaPk = field.NewInt32(tableName, "tpa_pk")
	_skoringMinatSmaV2.TpaPa = field.NewInt32(tableName, "tpa_pa")
	_skoringMinatSmaV2.TpaPs = field.NewInt32(tableName, "tpa_ps")
	_skoringMinatSmaV2.TpaPm = field.NewInt32(tableName, "tpa_pm")
	_skoringMinatSmaV2.TpaKt = field.NewInt32(tableName, "tpa_kt")
	_skoringMinatSmaV2.TpaIq = field.NewInt32(tableName, "tpa_iq")
	_skoringMinatSmaV2.SkorIq = field.NewFloat32(tableName, "skor_iq")
	_skoringMinatSmaV2.MinatSains = field.NewInt32(tableName, "minat_sains")
	_skoringMinatSmaV2.MinatHumaniora = field.NewInt32(tableName, "minat_humaniora")
	_skoringMinatSmaV2.MinatBahasa = field.NewInt32(tableName, "minat_bahasa")
	_skoringMinatSmaV2.MinatRentang = field.NewInt32(tableName, "minat_rentang")
	_skoringMinatSmaV2.SikapAgm = field.NewInt32(tableName, "sikap_agm")
	_skoringMinatSmaV2.SikapPkn = field.NewInt32(tableName, "sikap_pkn")
	_skoringMinatSmaV2.SikapInd = field.NewInt32(tableName, "sikap_ind")
	_skoringMinatSmaV2.SikapEng = field.NewInt32(tableName, "sikap_eng")
	_skoringMinatSmaV2.SikapMat = field.NewInt32(tableName, "sikap_mat")
	_skoringMinatSmaV2.SikapFis = field.NewInt32(tableName, "sikap_fis")
	_skoringMinatSmaV2.SikapBio = field.NewInt32(tableName, "sikap_bio")
	_skoringMinatSmaV2.SikapEko = field.NewInt32(tableName, "sikap_eko")
	_skoringMinatSmaV2.SikapSej = field.NewInt32(tableName, "sikap_sej")
	_skoringMinatSmaV2.SikapGeo = field.NewInt32(tableName, "sikap_geo")
	_skoringMinatSmaV2.SikapIlmuAlam = field.NewInt32(tableName, "sikap_ilmu_alam")
	_skoringMinatSmaV2.SikapIlmuSosial = field.NewInt32(tableName, "sikap_ilmu_sosial")
	_skoringMinatSmaV2.SikapRentang = field.NewInt32(tableName, "sikap_rentang")
	_skoringMinatSmaV2.TipojungE = field.NewInt32(tableName, "tipojung_e")
	_skoringMinatSmaV2.TipojungI = field.NewInt32(tableName, "tipojung_i")
	_skoringMinatSmaV2.TipojungS = field.NewInt32(tableName, "tipojung_s")
	_skoringMinatSmaV2.TipojungN = field.NewInt32(tableName, "tipojung_n")
	_skoringMinatSmaV2.TipojungT = field.NewInt32(tableName, "tipojung_t")
	_skoringMinatSmaV2.TipojungF = field.NewInt32(tableName, "tipojung_f")
	_skoringMinatSmaV2.TipojungJ = field.NewInt32(tableName, "tipojung_j")
	_skoringMinatSmaV2.TipojungP = field.NewInt32(tableName, "tipojung_p")
	_skoringMinatSmaV2.TipojungKode = field.NewString(tableName, "tipojung_kode")
	_skoringMinatSmaV2.PribadiMotivasi = field.NewInt32(tableName, "pribadi_motivasi")
	_skoringMinatSmaV2.PribadiJuang = field.NewInt32(tableName, "pribadi_juang")
	_skoringMinatSmaV2.PribadiYakin = field.NewInt32(tableName, "pribadi_yakin")
	_skoringMinatSmaV2.PribadiPercaya = field.NewInt32(tableName, "pribadi_percaya")
	_skoringMinatSmaV2.PribadiKonsep = field.NewInt32(tableName, "pribadi_konsep")
	_skoringMinatSmaV2.PribadiKreativitas = field.NewInt32(tableName, "pribadi_kreativitas")
	_skoringMinatSmaV2.PribadiMimpin = field.NewInt32(tableName, "pribadi_mimpin")
	_skoringMinatSmaV2.PribadiEntrepreneur = field.NewInt32(tableName, "pribadi_entrepreneur")
	_skoringMinatSmaV2.PribadiStress = field.NewInt32(tableName, "pribadi_stress")
	_skoringMinatSmaV2.PribadiEmosi = field.NewInt32(tableName, "pribadi_emosi")
	_skoringMinatSmaV2.PribadiSosial = field.NewInt32(tableName, "pribadi_sosial")
	_skoringMinatSmaV2.PribadiEmpati = field.NewInt32(tableName, "pribadi_empati")
	_skoringMinatSmaV2.RekomMinat = field.NewString(tableName, "rekom_minat")
	_skoringMinatSmaV2.RekomSikapPelajaran = field.NewString(tableName, "rekom_sikap_pelajaran")
	_skoringMinatSmaV2.RekomAkhir = field.NewString(tableName, "rekom_akhir")
	_skoringMinatSmaV2.SelesaiSkoring = field.NewInt32(tableName, "selesai_skoring")
	_skoringMinatSmaV2.MinatIpa1 = field.NewInt16(tableName, "minat_ipa1")
	_skoringMinatSmaV2.MinatIpa2 = field.NewInt16(tableName, "minat_ipa2")
	_skoringMinatSmaV2.MinatIpa3 = field.NewInt16(tableName, "minat_ipa3")
	_skoringMinatSmaV2.MinatIpa4 = field.NewInt16(tableName, "minat_ipa4")
	_skoringMinatSmaV2.MinatIpa5 = field.NewInt16(tableName, "minat_ipa5")
	_skoringMinatSmaV2.MinatIps1 = field.NewInt16(tableName, "minat_ips1")
	_skoringMinatSmaV2.MinatIps2 = field.NewInt16(tableName, "minat_ips2")
	_skoringMinatSmaV2.MinatIps3 = field.NewInt16(tableName, "minat_ips3")
	_skoringMinatSmaV2.MinatIps4 = field.NewInt16(tableName, "minat_ips4")
	_skoringMinatSmaV2.MinatIps5 = field.NewInt16(tableName, "minat_ips5")
	_skoringMinatSmaV2.MinatDinas1 = field.NewString(tableName, "minat_dinas1")
	_skoringMinatSmaV2.MinatDinas2 = field.NewString(tableName, "minat_dinas2")
	_skoringMinatSmaV2.MinatDinas3 = field.NewString(tableName, "minat_dinas3")
	_skoringMinatSmaV2.RekomKelas = field.NewString(tableName, "rekom_kelas")
	_skoringMinatSmaV2.RekomMapelUtama = field.NewString(tableName, "rekom_mapel_utama")
	_skoringMinatSmaV2.RekomMapelTambahan = field.NewString(tableName, "rekom_mapel_tambahan")

	_skoringMinatSmaV2.fillFieldMap()

	return _skoringMinatSmaV2
}

type skoringMinatSmaV2 struct {
	skoringMinatSmaV2Do skoringMinatSmaV2Do

	ALL                 field.Asterisk
	ID                  field.Int32
	IDUser              field.Int32
	IDQuiz              field.Int32
	TpaIu               field.Int32
	TpaPv               field.Int32
	TpaPk               field.Int32
	TpaPa               field.Int32
	TpaPs               field.Int32
	TpaPm               field.Int32
	TpaKt               field.Int32
	TpaIq               field.Int32
	SkorIq              field.Float32
	MinatSains          field.Int32
	MinatHumaniora      field.Int32
	MinatBahasa         field.Int32
	MinatRentang        field.Int32
	SikapAgm            field.Int32
	SikapPkn            field.Int32
	SikapInd            field.Int32
	SikapEng            field.Int32
	SikapMat            field.Int32
	SikapFis            field.Int32
	SikapBio            field.Int32
	SikapEko            field.Int32
	SikapSej            field.Int32
	SikapGeo            field.Int32
	SikapIlmuAlam       field.Int32
	SikapIlmuSosial     field.Int32
	SikapRentang        field.Int32
	TipojungE           field.Int32
	TipojungI           field.Int32
	TipojungS           field.Int32
	TipojungN           field.Int32
	TipojungT           field.Int32
	TipojungF           field.Int32
	TipojungJ           field.Int32
	TipojungP           field.Int32
	TipojungKode        field.String
	PribadiMotivasi     field.Int32
	PribadiJuang        field.Int32
	PribadiYakin        field.Int32
	PribadiPercaya      field.Int32
	PribadiKonsep       field.Int32
	PribadiKreativitas  field.Int32
	PribadiMimpin       field.Int32
	PribadiEntrepreneur field.Int32
	PribadiStress       field.Int32
	PribadiEmosi        field.Int32
	PribadiSosial       field.Int32
	PribadiEmpati       field.Int32
	RekomMinat          field.String
	RekomSikapPelajaran field.String
	RekomAkhir          field.String // REKOM IPA / IPS
	SelesaiSkoring      field.Int32
	MinatIpa1           field.Int16  // Minat Kuliah ILMU ALAM - 1
	MinatIpa2           field.Int16  // Minat Kuliah ILMU ALAM - 2
	MinatIpa3           field.Int16  // Minat Kuliah ILMU ALAM - 3
	MinatIpa4           field.Int16  // Minat Kuliah ULMU ALAM - 4
	MinatIpa5           field.Int16  // Minat Kuliah ILMU ALAM - 5
	MinatIps1           field.Int16  // Minat Kuliah ILMU SOSIAL - 1
	MinatIps2           field.Int16  // Minat Kuliah ILMU SOSIAL - 2
	MinatIps3           field.Int16  // Minat Kuliah ILMU SOSIAL - 3
	MinatIps4           field.Int16  // Minat Kuliah ILMU SOSIAL - 4
	MinatIps5           field.Int16  // Minat Kuliah ILMU SOSIAL -5
	MinatDinas1         field.String // Minat Kuliah DINAS 1
	MinatDinas2         field.String // Miant Kuliah DINAS 2
	MinatDinas3         field.String // Minat Kuliah DINAS 3
	RekomKelas          field.String // REKOM KELOMPOK KELAS
	RekomMapelUtama     field.String // REKOMENDASI MATA PELAJARAN UTAMA
	RekomMapelTambahan  field.String // REKOMENDASI MATA PELAJARAN TAMBAHAN

	fieldMap map[string]field.Expr
}

func (s skoringMinatSmaV2) Table(newTableName string) *skoringMinatSmaV2 {
	s.skoringMinatSmaV2Do.UseTable(newTableName)
	return s.updateTableName(newTableName)
}

func (s skoringMinatSmaV2) As(alias string) *skoringMinatSmaV2 {
	s.skoringMinatSmaV2Do.DO = *(s.skoringMinatSmaV2Do.As(alias).(*gen.DO))
	return s.updateTableName(alias)
}

func (s *skoringMinatSmaV2) updateTableName(table string) *skoringMinatSmaV2 {
	s.ALL = field.NewAsterisk(table)
	s.ID = field.NewInt32(table, "id")
	s.IDUser = field.NewInt32(table, "id_user")
	s.IDQuiz = field.NewInt32(table, "id_quiz")
	s.TpaIu = field.NewInt32(table, "tpa_iu")
	s.TpaPv = field.NewInt32(table, "tpa_pv")
	s.TpaPk = field.NewInt32(table, "tpa_pk")
	s.TpaPa = field.NewInt32(table, "tpa_pa")
	s.TpaPs = field.NewInt32(table, "tpa_ps")
	s.TpaPm = field.NewInt32(table, "tpa_pm")
	s.TpaKt = field.NewInt32(table, "tpa_kt")
	s.TpaIq = field.NewInt32(table, "tpa_iq")
	s.SkorIq = field.NewFloat32(table, "skor_iq")
	s.MinatSains = field.NewInt32(table, "minat_sains")
	s.MinatHumaniora = field.NewInt32(table, "minat_humaniora")
	s.MinatBahasa = field.NewInt32(table, "minat_bahasa")
	s.MinatRentang = field.NewInt32(table, "minat_rentang")
	s.SikapAgm = field.NewInt32(table, "sikap_agm")
	s.SikapPkn = field.NewInt32(table, "sikap_pkn")
	s.SikapInd = field.NewInt32(table, "sikap_ind")
	s.SikapEng = field.NewInt32(table, "sikap_eng")
	s.SikapMat = field.NewInt32(table, "sikap_mat")
	s.SikapFis = field.NewInt32(table, "sikap_fis")
	s.SikapBio = field.NewInt32(table, "sikap_bio")
	s.SikapEko = field.NewInt32(table, "sikap_eko")
	s.SikapSej = field.NewInt32(table, "sikap_sej")
	s.SikapGeo = field.NewInt32(table, "sikap_geo")
	s.SikapIlmuAlam = field.NewInt32(table, "sikap_ilmu_alam")
	s.SikapIlmuSosial = field.NewInt32(table, "sikap_ilmu_sosial")
	s.SikapRentang = field.NewInt32(table, "sikap_rentang")
	s.TipojungE = field.NewInt32(table, "tipojung_e")
	s.TipojungI = field.NewInt32(table, "tipojung_i")
	s.TipojungS = field.NewInt32(table, "tipojung_s")
	s.TipojungN = field.NewInt32(table, "tipojung_n")
	s.TipojungT = field.NewInt32(table, "tipojung_t")
	s.TipojungF = field.NewInt32(table, "tipojung_f")
	s.TipojungJ = field.NewInt32(table, "tipojung_j")
	s.TipojungP = field.NewInt32(table, "tipojung_p")
	s.TipojungKode = field.NewString(table, "tipojung_kode")
	s.PribadiMotivasi = field.NewInt32(table, "pribadi_motivasi")
	s.PribadiJuang = field.NewInt32(table, "pribadi_juang")
	s.PribadiYakin = field.NewInt32(table, "pribadi_yakin")
	s.PribadiPercaya = field.NewInt32(table, "pribadi_percaya")
	s.PribadiKonsep = field.NewInt32(table, "pribadi_konsep")
	s.PribadiKreativitas = field.NewInt32(table, "pribadi_kreativitas")
	s.PribadiMimpin = field.NewInt32(table, "pribadi_mimpin")
	s.PribadiEntrepreneur = field.NewInt32(table, "pribadi_entrepreneur")
	s.PribadiStress = field.NewInt32(table, "pribadi_stress")
	s.PribadiEmosi = field.NewInt32(table, "pribadi_emosi")
	s.PribadiSosial = field.NewInt32(table, "pribadi_sosial")
	s.PribadiEmpati = field.NewInt32(table, "pribadi_empati")
	s.RekomMinat = field.NewString(table, "rekom_minat")
	s.RekomSikapPelajaran = field.NewString(table, "rekom_sikap_pelajaran")
	s.RekomAkhir = field.NewString(table, "rekom_akhir")
	s.SelesaiSkoring = field.NewInt32(table, "selesai_skoring")
	s.MinatIpa1 = field.NewInt16(table, "minat_ipa1")
	s.MinatIpa2 = field.NewInt16(table, "minat_ipa2")
	s.MinatIpa3 = field.NewInt16(table, "minat_ipa3")
	s.MinatIpa4 = field.NewInt16(table, "minat_ipa4")
	s.MinatIpa5 = field.NewInt16(table, "minat_ipa5")
	s.MinatIps1 = field.NewInt16(table, "minat_ips1")
	s.MinatIps2 = field.NewInt16(table, "minat_ips2")
	s.MinatIps3 = field.NewInt16(table, "minat_ips3")
	s.MinatIps4 = field.NewInt16(table, "minat_ips4")
	s.MinatIps5 = field.NewInt16(table, "minat_ips5")
	s.MinatDinas1 = field.NewString(table, "minat_dinas1")
	s.MinatDinas2 = field.NewString(table, "minat_dinas2")
	s.MinatDinas3 = field.NewString(table, "minat_dinas3")
	s.RekomKelas = field.NewString(table, "rekom_kelas")
	s.RekomMapelUtama = field.NewString(table, "rekom_mapel_utama")
	s.RekomMapelTambahan = field.NewString(table, "rekom_mapel_tambahan")

	s.fillFieldMap()

	return s
}

func (s *skoringMinatSmaV2) WithContext(ctx context.Context) *skoringMinatSmaV2Do {
	return s.skoringMinatSmaV2Do.WithContext(ctx)
}

func (s skoringMinatSmaV2) TableName() string { return s.skoringMinatSmaV2Do.TableName() }

func (s skoringMinatSmaV2) Alias() string { return s.skoringMinatSmaV2Do.Alias() }

func (s skoringMinatSmaV2) Columns(cols ...field.Expr) gen.Columns {
	return s.skoringMinatSmaV2Do.Columns(cols...)
}

func (s *skoringMinatSmaV2) GetFieldByName(fieldName string) (field.OrderExpr, bool) {
	_f, ok := s.fieldMap[fieldName]
	if !ok || _f == nil {
		return nil, false
	}
	_oe, ok := _f.(field.OrderExpr)
	return _oe, ok
}

func (s *skoringMinatSmaV2) fillFieldMap() {
	s.fieldMap = make(map[string]field.Expr, 70)
	s.fieldMap["id"] = s.ID
	s.fieldMap["id_user"] = s.IDUser
	s.fieldMap["id_quiz"] = s.IDQuiz
	s.fieldMap["tpa_iu"] = s.TpaIu
	s.fieldMap["tpa_pv"] = s.TpaPv
	s.fieldMap["tpa_pk"] = s.TpaPk
	s.fieldMap["tpa_pa"] = s.TpaPa
	s.fieldMap["tpa_ps"] = s.TpaPs
	s.fieldMap["tpa_pm"] = s.TpaPm
	s.fieldMap["tpa_kt"] = s.TpaKt
	s.fieldMap["tpa_iq"] = s.TpaIq
	s.fieldMap["skor_iq"] = s.SkorIq
	s.fieldMap["minat_sains"] = s.MinatSains
	s.fieldMap["minat_humaniora"] = s.MinatHumaniora
	s.fieldMap["minat_bahasa"] = s.MinatBahasa
	s.fieldMap["minat_rentang"] = s.MinatRentang
	s.fieldMap["sikap_agm"] = s.SikapAgm
	s.fieldMap["sikap_pkn"] = s.SikapPkn
	s.fieldMap["sikap_ind"] = s.SikapInd
	s.fieldMap["sikap_eng"] = s.SikapEng
	s.fieldMap["sikap_mat"] = s.SikapMat
	s.fieldMap["sikap_fis"] = s.SikapFis
	s.fieldMap["sikap_bio"] = s.SikapBio
	s.fieldMap["sikap_eko"] = s.SikapEko
	s.fieldMap["sikap_sej"] = s.SikapSej
	s.fieldMap["sikap_geo"] = s.SikapGeo
	s.fieldMap["sikap_ilmu_alam"] = s.SikapIlmuAlam
	s.fieldMap["sikap_ilmu_sosial"] = s.SikapIlmuSosial
	s.fieldMap["sikap_rentang"] = s.SikapRentang
	s.fieldMap["tipojung_e"] = s.TipojungE
	s.fieldMap["tipojung_i"] = s.TipojungI
	s.fieldMap["tipojung_s"] = s.TipojungS
	s.fieldMap["tipojung_n"] = s.TipojungN
	s.fieldMap["tipojung_t"] = s.TipojungT
	s.fieldMap["tipojung_f"] = s.TipojungF
	s.fieldMap["tipojung_j"] = s.TipojungJ
	s.fieldMap["tipojung_p"] = s.TipojungP
	s.fieldMap["tipojung_kode"] = s.TipojungKode
	s.fieldMap["pribadi_motivasi"] = s.PribadiMotivasi
	s.fieldMap["pribadi_juang"] = s.PribadiJuang
	s.fieldMap["pribadi_yakin"] = s.PribadiYakin
	s.fieldMap["pribadi_percaya"] = s.PribadiPercaya
	s.fieldMap["pribadi_konsep"] = s.PribadiKonsep
	s.fieldMap["pribadi_kreativitas"] = s.PribadiKreativitas
	s.fieldMap["pribadi_mimpin"] = s.PribadiMimpin
	s.fieldMap["pribadi_entrepreneur"] = s.PribadiEntrepreneur
	s.fieldMap["pribadi_stress"] = s.PribadiStress
	s.fieldMap["pribadi_emosi"] = s.PribadiEmosi
	s.fieldMap["pribadi_sosial"] = s.PribadiSosial
	s.fieldMap["pribadi_empati"] = s.PribadiEmpati
	s.fieldMap["rekom_minat"] = s.RekomMinat
	s.fieldMap["rekom_sikap_pelajaran"] = s.RekomSikapPelajaran
	s.fieldMap["rekom_akhir"] = s.RekomAkhir
	s.fieldMap["selesai_skoring"] = s.SelesaiSkoring
	s.fieldMap["minat_ipa1"] = s.MinatIpa1
	s.fieldMap["minat_ipa2"] = s.MinatIpa2
	s.fieldMap["minat_ipa3"] = s.MinatIpa3
	s.fieldMap["minat_ipa4"] = s.MinatIpa4
	s.fieldMap["minat_ipa5"] = s.MinatIpa5
	s.fieldMap["minat_ips1"] = s.MinatIps1
	s.fieldMap["minat_ips2"] = s.MinatIps2
	s.fieldMap["minat_ips3"] = s.MinatIps3
	s.fieldMap["minat_ips4"] = s.MinatIps4
	s.fieldMap["minat_ips5"] = s.MinatIps5
	s.fieldMap["minat_dinas1"] = s.MinatDinas1
	s.fieldMap["minat_dinas2"] = s.MinatDinas2
	s.fieldMap["minat_dinas3"] = s.MinatDinas3
	s.fieldMap["rekom_kelas"] = s.RekomKelas
	s.fieldMap["rekom_mapel_utama"] = s.RekomMapelUtama
	s.fieldMap["rekom_mapel_tambahan"] = s.RekomMapelTambahan
}

func (s skoringMinatSmaV2) clone(db *gorm.DB) skoringMinatSmaV2 {
	s.skoringMinatSmaV2Do.ReplaceConnPool(db.Statement.ConnPool)
	return s
}

func (s skoringMinatSmaV2) replaceDB(db *gorm.DB) skoringMinatSmaV2 {
	s.skoringMinatSmaV2Do.ReplaceDB(db)
	return s
}

type skoringMinatSmaV2Do struct{ gen.DO }

func (s skoringMinatSmaV2Do) Debug() *skoringMinatSmaV2Do {
	return s.withDO(s.DO.Debug())
}

func (s skoringMinatSmaV2Do) WithContext(ctx context.Context) *skoringMinatSmaV2Do {
	return s.withDO(s.DO.WithContext(ctx))
}

func (s skoringMinatSmaV2Do) ReadDB() *skoringMinatSmaV2Do {
	return s.Clauses(dbresolver.Read)
}

func (s skoringMinatSmaV2Do) WriteDB() *skoringMinatSmaV2Do {
	return s.Clauses(dbresolver.Write)
}

func (s skoringMinatSmaV2Do) Session(config *gorm.Session) *skoringMinatSmaV2Do {
	return s.withDO(s.DO.Session(config))
}

func (s skoringMinatSmaV2Do) Clauses(conds ...clause.Expression) *skoringMinatSmaV2Do {
	return s.withDO(s.DO.Clauses(conds...))
}

func (s skoringMinatSmaV2Do) Returning(value interface{}, columns ...string) *skoringMinatSmaV2Do {
	return s.withDO(s.DO.Returning(value, columns...))
}

func (s skoringMinatSmaV2Do) Not(conds ...gen.Condition) *skoringMinatSmaV2Do {
	return s.withDO(s.DO.Not(conds...))
}

func (s skoringMinatSmaV2Do) Or(conds ...gen.Condition) *skoringMinatSmaV2Do {
	return s.withDO(s.DO.Or(conds...))
}

func (s skoringMinatSmaV2Do) Select(conds ...field.Expr) *skoringMinatSmaV2Do {
	return s.withDO(s.DO.Select(conds...))
}

func (s skoringMinatSmaV2Do) Where(conds ...gen.Condition) *skoringMinatSmaV2Do {
	return s.withDO(s.DO.Where(conds...))
}

func (s skoringMinatSmaV2Do) Order(conds ...field.Expr) *skoringMinatSmaV2Do {
	return s.withDO(s.DO.Order(conds...))
}

func (s skoringMinatSmaV2Do) Distinct(cols ...field.Expr) *skoringMinatSmaV2Do {
	return s.withDO(s.DO.Distinct(cols...))
}

func (s skoringMinatSmaV2Do) Omit(cols ...field.Expr) *skoringMinatSmaV2Do {
	return s.withDO(s.DO.Omit(cols...))
}

func (s skoringMinatSmaV2Do) Join(table schema.Tabler, on ...field.Expr) *skoringMinatSmaV2Do {
	return s.withDO(s.DO.Join(table, on...))
}

func (s skoringMinatSmaV2Do) LeftJoin(table schema.Tabler, on ...field.Expr) *skoringMinatSmaV2Do {
	return s.withDO(s.DO.LeftJoin(table, on...))
}

func (s skoringMinatSmaV2Do) RightJoin(table schema.Tabler, on ...field.Expr) *skoringMinatSmaV2Do {
	return s.withDO(s.DO.RightJoin(table, on...))
}

func (s skoringMinatSmaV2Do) Group(cols ...field.Expr) *skoringMinatSmaV2Do {
	return s.withDO(s.DO.Group(cols...))
}

func (s skoringMinatSmaV2Do) Having(conds ...gen.Condition) *skoringMinatSmaV2Do {
	return s.withDO(s.DO.Having(conds...))
}

func (s skoringMinatSmaV2Do) Limit(limit int) *skoringMinatSmaV2Do {
	return s.withDO(s.DO.Limit(limit))
}

func (s skoringMinatSmaV2Do) Offset(offset int) *skoringMinatSmaV2Do {
	return s.withDO(s.DO.Offset(offset))
}

func (s skoringMinatSmaV2Do) Scopes(funcs ...func(gen.Dao) gen.Dao) *skoringMinatSmaV2Do {
	return s.withDO(s.DO.Scopes(funcs...))
}

func (s skoringMinatSmaV2Do) Unscoped() *skoringMinatSmaV2Do {
	return s.withDO(s.DO.Unscoped())
}

func (s skoringMinatSmaV2Do) Create(values ...*entity.SkoringMinatSmaV2) error {
	if len(values) == 0 {
		return nil
	}
	return s.DO.Create(values)
}

func (s skoringMinatSmaV2Do) CreateInBatches(values []*entity.SkoringMinatSmaV2, batchSize int) error {
	return s.DO.CreateInBatches(values, batchSize)
}

// Save : !!! underlying implementation is different with GORM
// The method is equivalent to executing the statement: db.Clauses(clause.OnConflict{UpdateAll: true}).Create(values)
func (s skoringMinatSmaV2Do) Save(values ...*entity.SkoringMinatSmaV2) error {
	if len(values) == 0 {
		return nil
	}
	return s.DO.Save(values)
}

func (s skoringMinatSmaV2Do) First() (*entity.SkoringMinatSmaV2, error) {
	if result, err := s.DO.First(); err != nil {
		return nil, err
	} else {
		return result.(*entity.SkoringMinatSmaV2), nil
	}
}

func (s skoringMinatSmaV2Do) Take() (*entity.SkoringMinatSmaV2, error) {
	if result, err := s.DO.Take(); err != nil {
		return nil, err
	} else {
		return result.(*entity.SkoringMinatSmaV2), nil
	}
}

func (s skoringMinatSmaV2Do) Last() (*entity.SkoringMinatSmaV2, error) {
	if result, err := s.DO.Last(); err != nil {
		return nil, err
	} else {
		return result.(*entity.SkoringMinatSmaV2), nil
	}
}

func (s skoringMinatSmaV2Do) Find() ([]*entity.SkoringMinatSmaV2, error) {
	result, err := s.DO.Find()
	return result.([]*entity.SkoringMinatSmaV2), err
}

func (s skoringMinatSmaV2Do) FindInBatch(batchSize int, fc func(tx gen.Dao, batch int) error) (results []*entity.SkoringMinatSmaV2, err error) {
	buf := make([]*entity.SkoringMinatSmaV2, 0, batchSize)
	err = s.DO.FindInBatches(&buf, batchSize, func(tx gen.Dao, batch int) error {
		defer func() { results = append(results, buf...) }()
		return fc(tx, batch)
	})
	return results, err
}

func (s skoringMinatSmaV2Do) FindInBatches(result *[]*entity.SkoringMinatSmaV2, batchSize int, fc func(tx gen.Dao, batch int) error) error {
	return s.DO.FindInBatches(result, batchSize, fc)
}

func (s skoringMinatSmaV2Do) Attrs(attrs ...field.AssignExpr) *skoringMinatSmaV2Do {
	return s.withDO(s.DO.Attrs(attrs...))
}

func (s skoringMinatSmaV2Do) Assign(attrs ...field.AssignExpr) *skoringMinatSmaV2Do {
	return s.withDO(s.DO.Assign(attrs...))
}

func (s skoringMinatSmaV2Do) Joins(fields ...field.RelationField) *skoringMinatSmaV2Do {
	for _, _f := range fields {
		s = *s.withDO(s.DO.Joins(_f))
	}
	return &s
}

func (s skoringMinatSmaV2Do) Preload(fields ...field.RelationField) *skoringMinatSmaV2Do {
	for _, _f := range fields {
		s = *s.withDO(s.DO.Preload(_f))
	}
	return &s
}

func (s skoringMinatSmaV2Do) FirstOrInit() (*entity.SkoringMinatSmaV2, error) {
	if result, err := s.DO.FirstOrInit(); err != nil {
		return nil, err
	} else {
		return result.(*entity.SkoringMinatSmaV2), nil
	}
}

func (s skoringMinatSmaV2Do) FirstOrCreate() (*entity.SkoringMinatSmaV2, error) {
	if result, err := s.DO.FirstOrCreate(); err != nil {
		return nil, err
	} else {
		return result.(*entity.SkoringMinatSmaV2), nil
	}
}

func (s skoringMinatSmaV2Do) FindByPage(offset int, limit int) (result []*entity.SkoringMinatSmaV2, count int64, err error) {
	result, err = s.Offset(offset).Limit(limit).Find()
	if err != nil {
		return
	}

	if size := len(result); 0 < limit && 0 < size && size < limit {
		count = int64(size + offset)
		return
	}

	count, err = s.Offset(-1).Limit(-1).Count()
	return
}

func (s skoringMinatSmaV2Do) ScanByPage(result interface{}, offset int, limit int) (count int64, err error) {
	count, err = s.Count()
	if err != nil {
		return
	}

	err = s.Offset(offset).Limit(limit).Scan(result)
	return
}

func (s skoringMinatSmaV2Do) Scan(result interface{}) (err error) {
	return s.DO.Scan(result)
}

func (s skoringMinatSmaV2Do) Delete(models ...*entity.SkoringMinatSmaV2) (result gen.ResultInfo, err error) {
	return s.DO.Delete(models)
}

func (s *skoringMinatSmaV2Do) withDO(do gen.Dao) *skoringMinatSmaV2Do {
	s.DO = *do.(*gen.DO)
	return s
}
